plugins {
    id 'java'
    id 'jacoco'
}

group 'de.thro.messaging'
version '1.0-SNAPSHOT'

sourceCompatibility = '1.11'
targetCompatibility = '1.11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation group: 'org.apache.activemq', name: 'activemq-core', version: '5.7.0'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '5.9.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.6'
    // https://mvnrepository.com/artifact/org.awaitility/awaitility
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// Do not generate reports for individual projects
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
        csv.destination file("${buildDir}/jacocoCsv")
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}


jar {
    manifest {
        attributes(
                'Main-Class': 'de.thro.messaging.application.Startup'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}
